# This is a basic workflow to help you get started with Actions
name: manualbuild

# Controls when the action will run. 
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Build on windows
    runs-on: windows-2019
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: 5.15.2
          target: desktop
          arch: win64_msvc2019_64
          modules: qtwebengine

      - name: Build
        run: .\runbuild.bat

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          path: ./build/build/Release

  create_release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - uses: actions/checkout@v3
      - name: Create artifact directory
        run: rm -rf /tmp/artifacts && mkdir /tmp/artifacts
      - uses: actions/download-artifact@v3
        with:
          path: /tmp/artifacts
      - name: Compress artifacts
        run: |
          pushd /tmp/artifacts
          for i in *;do zip -r -0 $i.zip $i;done
          popd

      - name: Get short commit
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      - uses: rickstaa/action-create-tag@v1
        with:
          tag: release-${{ env.SHORT_SHA }}
          tag_exists_error: false

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "/tmp/artifacts/*.zip"
          name: Rclone Browser Autobuild For Commit ${{ env.SHORT_SHA }}
          omitBody: true
          generateReleaseNotes: true
          prerelease: true
          skipIfReleaseExists: true
          tag: release-${{ env.SHORT_SHA }}
